@model IEnumerable<ToDoList1.Models.ToDo>
<style>
    body {
        /* padding: 0;
    margin: 0; */
        background-image: url(../../İmg/background.jpg);
        /* margin:auto; */
        background-size: cover;
        /* background-position: center; */
    }

    #container {
        position: relative;
        border-radius: 20px;
        background-color: rgba(255, 255, 255, 0.7);
        padding: 20px 0 30px 0;
        width: 60%;
        height: 40%;
        margin: auto;
        margin-top: 10%;
        font-weight: bold;
    }


    input[type=text] {
        background-color: rgba(255, 255, 255, 80%);
        color: black;
        cursor: pointer;
        border-radius: 20px;
        margin-left: 60rem;
        margin-top: 5rem;
    }

    input[type=password] {
        background-color: rgba(255, 255, 255, 60%);
        color: black;
        cursor: pointer;
        border-radius: 20px;
    }

    input[type=submit] {
        background-color: burlywood;
        color: black;
        font: 50%;
        cursor: pointer;
        border-radius: 50px;
        width: 50%;
        margin-top: 20px;
        font-weight: bold;
    }

        input[type=submit]:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

    h2 {
        font-size: 20px;
        margin-left: 27rem;
        font-weight: bold;
    }

    .form-group {
        width: 120rem;
    }

    hr {
        width: 68.4rem;
    }

    p {
        font-weight: bold;
        font-size: 13px;
        margin: 3rem;
      
    }
</style>
<body>
    <div id="container">


        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsDone)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.CheckBoxFor(modelItem => item.IsDone, new { id = item.Id, @class = "ActiveCheck" })
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        <p>You can define a list by entering <br /> the list name and pressing the enter key =></p>
    </div>
   
</body>
<script src="~/Custom_Scripts/AddCheckBoxListener.js"></script>
